import 'package:chatapp_php/dm_page.dart';
import 'package:flutter/material.dart';
import 'package:hive/hive.dart';
import 'package:supabase_flutter/supabase_flutter.dart';

final _mybox=Hive.box('info_user');

Future<void> main() async {
  WidgetsFlutterBinding.ensureInitialized();

  await Supabase.initialize(
    url: 'https://bkqimylsvpdzyhkptguq.supabase.co',
    anonKey: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJrcWlteWxzdnBkenloa3B0Z3VxIiwicm9sZSI6ImFub24iLCJpYXQiOjE2OTQ2MzAyMDgsImV4cCI6MjAxMDIwNjIwOH0.C7gI_ifWQjGN_lECc-V3dH29LNU7dYICrIJZtPPxF5A',
  );
  
  
  runApp(chat_page());
}

dm_page seluser= new dm_page();
class chat_page extends StatefulWidget {
  
  const chat_page({super.key});

  @override
  State<chat_page> createState() => _chat_pageState();
}

class _chat_pageState extends State<chat_page> {
  
  var signinuser=_mybox.get('info_user');//khaled
  var selecteduser=seluser.userchat();//omar
  
  
final s=Supabase.instance.client
.from('mess')
.stream(primaryKey: ['id'])
.order('date');



cangecolor(lst,index,fromuser){
  if(lst[index]['fromuser']==fromuser)
  return Colors.purple;
  else
    return Colors.grey;
}


  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: SafeArea(
        child: Scaffold(
        body: StreamBuilder(
        stream: s,
        builder: (context,snapshot){
          
          if(snapshot.data!=null){
          var list=snapshot.data!.reversed.toList();
          print(list);
          return Container(
            width: double.infinity,
            height: double.infinity,
            // color: Colors.black,
            child: Column(
              children: [
                Text("data"),
            Container(
              width: double.infinity,
              height: 300,
              child: ListView.builder(
                itemCount: 7,
                itemBuilder:  (BuildContext context,index) {
            //  if(list[index]['fromuser']=='$signinuser' && list[index]['touser']=='$selecteduser' || list[index]['fromuser']=='$selecteduser' && list[index]['touser']=='$signinuser')
            
                  return Text("dajknknkta");
                  
                        // else 
                        // return SizedBox();
                        
                }),
            )
            
            
            
                ]),
              // ],
            // ),
          );
          }
          
          else
          return Center(child: CircularProgressIndicator());//futurebuilder
          
        }
      )
    )));
  }
}

// class HomePage extends StatefulWidget {
//   const HomePage({super.key});

//   @override
//   State<HomePage> createState() => _HomePageState();
// }

// class _HomePageState extends State<HomePage> {
//   var username="$signinuser";

//   final connection = PostgreSQLConnection(//conn section
//   'db.bkqimylsvpdzyhkptguq.supabase.co',
//   5432, 
//   'postgres',
//   username: 'postgres',
//   password: 'B@38Cbm*4qhJg.Y');
  
  
  
  
  
  



//       // .select<List<Map<String, dynamic>>>();
      
      
      
      
//   @override
//   Widget build(BuildContext context) {
//     return Scaffold(
//       body: StreamBuilder(
//         stream: _future,
//         builder: (context,snapshot){
//           if(snapshot.data!=null){
//             var list=snapshot.data!;
//           return 
//             ListView.builder(
//               itemCount: list!.length,
//               itemBuilder:  (BuildContext context,index) {
//                 return  Padding(
//                   padding: const EdgeInsets.all(8.0),
//                   child: Container(
//                       color: Colors.purple,
//                       width: double.infinity,
//                       height: 50,
//                       child:  ElevatedButton(
//                         onPressed: ()async{await sd();},
//                          child: Text("click")),
//                       ),
//                 );
//               }
//               );
//           }
//           else
//           return Center(child: CircularProgressIndicator());
//         }
//       )
//     );
//   }
// }






